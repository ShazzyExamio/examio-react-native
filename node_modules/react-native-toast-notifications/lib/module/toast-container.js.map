{"version":3,"sources":["toast-container.tsx"],"names":["React","Component","StyleSheet","KeyboardAvoidingView","Platform","Toast","ToastContainer","constructor","props","message","toastOptions","id","Math","random","toString","onDestroy","onClose","setState","toasts","state","filter","t","requestAnimationFrame","open","onHide","hide","map","toast","renderBottomToasts","offset","offsetBottom","style","bottom","justifyContent","flexDirection","OS","undefined","styles","container","placement","renderTopToasts","offsetTop","top","render","swipeEnabled","create","flex","position","width","maxWidth","zIndex","left","right","overflow","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  ViewStyle,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n} from \"react-native\";\r\nimport Toast, { ToastOptions, ToastProps } from \"./toast\";\r\n\r\nexport interface Props extends ToastOptions {\r\n  renderToast?(toast: ToastProps): JSX.Element;\r\n  renderType?: { [type: string]: (toast: ToastProps) => JSX.Element };\r\n  offset?: number;\r\n  offsetTop?: number;\r\n  offsetBottom?: number;\r\n  swipeEnabled?: boolean;\r\n}\r\n\r\ninterface State {\r\n  toasts: Array<ToastProps>;\r\n}\r\n\r\nclass ToastContainer extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: [],\r\n    };\r\n  }\r\n\r\n  static defaultProps: Props = {\r\n    placement: \"bottom\",\r\n    offset: 10,\r\n    swipeEnabled: true,\r\n  };\r\n\r\n  /**\r\n   * Shows a new toast. Returns id\r\n   */\r\n  show = (message: string | JSX.Element, toastOptions?: ToastOptions) => {\r\n    let id = toastOptions?.id || Math.random().toString();\r\n    const onDestroy = () => {\r\n      toastOptions?.onClose && toastOptions?.onClose();\r\n      this.setState({ toasts: this.state.toasts.filter((t) => t.id !== id) });\r\n    };\r\n\r\n    requestAnimationFrame(() => {\r\n      this.setState({ toasts: this.state.toasts.filter((t) => t.id !== id) });\r\n      this.setState({\r\n        toasts: [\r\n          {\r\n            id,\r\n            onDestroy,\r\n            message,\r\n            open: true,\r\n            onHide: () => this.hide(id),\r\n            ...this.props,\r\n            ...toastOptions,\r\n          },\r\n          ...this.state.toasts,\r\n        ],\r\n      });\r\n    });\r\n\r\n    return id;\r\n  };\r\n\r\n  /**\r\n   * Updates a toast, To use this create you must pass an id to show method first, then pass it here to update the toast.\r\n   */\r\n  update = (\r\n    id: string,\r\n    message: string | JSX.Element,\r\n    toastOptions?: ToastOptions\r\n  ) => {\r\n    this.setState({\r\n      toasts: this.state.toasts.map((toast) =>\r\n        toast.id === id ? { ...toast, message, ...toastOptions } : toast\r\n      ),\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Removes a toast from stack\r\n   */\r\n  hide = (id: string) => {\r\n    this.setState({\r\n      toasts: this.state.toasts.map((t) =>\r\n        t.id === id ? { ...t, open: false } : t\r\n      ),\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Removes all toasts in stack\r\n   */\r\n  hideAll = () => {\r\n    this.setState({\r\n      toasts: this.state.toasts.map((t) => ({ ...t, open: false })),\r\n    });\r\n  };\r\n\r\n  renderBottomToasts() {\r\n    const { toasts } = this.state;\r\n    let { offset, offsetBottom } = this.props;\r\n    let style: ViewStyle = {\r\n      bottom: offsetBottom || offset,\r\n      justifyContent: \"flex-end\",\r\n      flexDirection: \"column\",\r\n    };\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"position\" : undefined}\r\n        style={[styles.container, style]}\r\n        pointerEvents=\"box-none\"\r\n      >\r\n        {toasts\r\n          .filter((t) => !t.placement || t.placement === \"bottom\")\r\n          .map((toast) => (\r\n            <Toast key={toast.id} {...toast} />\r\n          ))}\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n\r\n  renderTopToasts() {\r\n    const { toasts } = this.state;\r\n    let { offset, offsetTop } = this.props;\r\n    let style: ViewStyle = {\r\n      top: offsetTop || offset,\r\n      justifyContent: \"flex-start\",\r\n      flexDirection: \"column-reverse\",\r\n    };\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"position\" : undefined}\r\n        style={[styles.container, style]}\r\n        pointerEvents=\"box-none\"\r\n      >\r\n        {toasts\r\n          .filter((t) => t.placement === \"top\")\r\n          .map((toast) => (\r\n            <Toast key={toast.id} {...toast} />\r\n          ))}\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.renderTopToasts()}\r\n        {this.renderBottomToasts()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 0,\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n    zIndex: 999999,\r\n    left: 0,\r\n    right: 0,\r\n    ...(Platform.OS === \"web\" ? { overflow: \"hidden\" } : null),\r\n  },\r\n  message: {\r\n    color: \"#333\",\r\n  },\r\n});\r\n\r\nexport default ToastContainer;\r\n"]}